<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 配置Mabatis映射文件 -->
<mapper namespace="com.dao.OrdersDAO">
  <resultMap type="orders" id="ordersMap">
    <id property="ordersid" column="ordersid" />
    <result property="ordercode" column="ordercode" />
    <result property="usersid" column="usersid" />
    <result property="employid" column="employid" />
    <result property="total" column="total" />
    <result property="addtime" column="addtime" />
    <result property="status" column="status" />
    <result property="tabxid" column="tabxid" />
    <result property="orderdate" column="orderdate" />
    <result property="sectionx" column="sectionx" />
    <result property="username" column="username" />
    <result property="employname" column="employname" />
    <result property="tabxname" column="tabxname" />
  </resultMap>
  <!-- 插入语句 DAO通过id调用此配置 -->
  <insert id="insertOrders" parameterType="orders">
    insert into orders(ordersid , ordercode , usersid , employid , total , addtime , status , tabxid , orderdate ,
    sectionx ) values(#{ordersid} , #{ordercode} ,
    #{usersid} , #{employid} , #{total} , #{addtime} , #{status} , #{tabxid} , #{orderdate} , #{sectionx} )
  </insert>
  <!-- 更新语句 DAO通过id调用此配置 -->
  <update id="updateOrders" parameterType="orders">
    update orders set ordercode=#{ordercode} , usersid=#{usersid} , employid=#{employid} , total=#{total} ,
    addtime=#{addtime} , status=#{status} , tabxid=#{tabxid} ,
    orderdate=#{orderdate} , sectionx=#{sectionx} where ordersid=#{ordersid}
  </update>
  <!-- 按主键删除 DAO通过id调用此配置 -->
  <delete id="deleteOrders" parameterType="String">
    delete from orders where ordersid = #{ordersid}
  </delete>
  <!-- 查询全部信息 DAO通过id调用此配置 -->
  <select id="getAllOrders" resultMap="ordersMap">
    select a.* , b.username , c.employname , d.tabxname from orders a LEFT JOIN users b on a.usersid = b.usersid LEFT
    JOIN employ c on a.employid= c.employid LEFT JOIN tabx d on a.tabxid = d.tabxid order by a.ordersid desc
  </select>

  <!-- 按主键查询 DAO通过id调用此配置 -->
  <select id="getOrdersById" parameterType="String" resultMap="ordersMap">
    select a.* , b.username , c.employname , d.tabxname from orders a LEFT JOIN users b on
    a.usersid = b.usersid LEFT JOIN employ c on a.employid= c.employid LEFT JOIN
    tabx d on a.tabxid = d.tabxid where a.ordersid=#{ordersid}
  </select>
  <!-- 按条件精确查询 DAO通过id调用此配置 -->
  <select id="getOrdersByCond" parameterType="orders" resultMap="ordersMap">
    select a.* , b.username , c.employname , d.tabxname from orders a LEFT JOIN users b on a.usersid = b.usersid LEFT JOIN employ c on a.employid= c.employid
    LEFT JOIN tabx d on a.tabxid = d.tabxid where 1=1
    <if test="ordercode != null and '' != ordercode">
      and a.ordercode = #{ordercode}
    </if>
    <if test="usersid != null and '' != usersid">
      and a.usersid = #{usersid}
    </if>
    <if test="employid != null and '' != employid">
      and a.employid = #{employid}
    </if>
    <if test="total != null and '' != total">
      and a.total = #{total}
    </if>
    <if test="addtime != null and '' != addtime">
      and a.addtime = #{addtime}
    </if>
    <if test="status != null and '' != status">
      and a.status = #{status}
    </if>
    <if test="tabxid != null and '' != tabxid">
      and a.tabxid = #{tabxid}
    </if>
    <if test="orderdate != null and '' != orderdate">
      and a.orderdate = #{orderdate}
    </if>
    <if test="sectionx != null and '' != sectionx">
      and a.sectionx = #{sectionx}
    </if>
  </select>
  <!-- 按条件模糊查询 DAO通过id调用此配置 -->
  <select id="getOrdersByLike" parameterType="orders" resultMap="ordersMap">
    select a.* , b.username , c.employname , d.tabxname from orders a LEFT JOIN users b on a.usersid = b.usersid LEFT JOIN employ c on a.employid= c.employid
    LEFT JOIN tabx d on a.tabxid = d.tabxid where 1=1
    <if test="ordercode != null and '' != ordercode">
      and a.ordercode like CONCAT('%', CONCAT(#{ordercode}, '%'))
    </if>
    <if test="usersid != null and '' != usersid">
      and b.username like CONCAT('%', CONCAT(#{usersid}, '%'))
    </if>
    <if test="employid != null and '' != employid">
      and c.employname like CONCAT('%', CONCAT(#{employid}, '%'))
    </if>
    <if test="total != null and '' != total">
      and a.total like CONCAT('%', CONCAT(#{total}, '%'))
    </if>
    <if test="addtime != null and '' != addtime">
      and a.addtime like CONCAT('%', CONCAT(#{addtime}, '%'))
    </if>
    <if test="status != null and '' != status">
      and a.status like CONCAT('%', CONCAT(#{status}, '%'))
    </if>
    <if test="tabxid != null and '' != tabxid">
      and d.tabxname like CONCAT('%', CONCAT(#{tabxid}, '%'))
    </if>
    <if test="orderdate != null and '' != orderdate">
      and a.orderdate like CONCAT('%', CONCAT(#{orderdate}, '%'))
    </if>
    <if test="sectionx != null and '' != sectionx">
      and a.sectionx like CONCAT('%', CONCAT(#{sectionx}, '%'))
    </if>
  </select>
</mapper>





























